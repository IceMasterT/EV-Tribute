import os,sys,time
sys.path.append(os.path.split(sys.path[0])[0])
from Net import *
from servercache import *
from player import *

class PlayerHandler(TCPServer):
    def __init__(self):
        TCPServer.__init__(self)
        self.cache = ServerCache()
        #self.client_list = {}
        #self.newclient = []
        #self.client_count = 0
        
    def connect_func(self,sock,host,port):
        print "Player Server successfully connected to %s on port %s!" % (host,port)
    def client_connect_func(self,sock,host,port,address):
        print "A client, (ip: %s, code: %s) connected on port %s!" % (address[0],address[1],port)
        self.newclient = address[1]
        #self.newclient.append(address[1])
        #self.newclient.append(self.client_count)
        #self.client_count += 1
    def client_disconnect_func(self,sock,host,port,address):
        print "A client, (ip: %s, code: %s) disconnected from port %s!" % (address[0],address[1],port)
        for x in self.cache.playerdict:
            if x == address[1]:
                print "X DISCONNN"
                self.cache.playerdict.pop(x)
                #self.client_count -= 1
                break
    def handle_data(self,data):
        if data[1] == "pos":
            for x in self.client_list:
                if x == data[0]:
                    #print "X==data[0]", str(x)
                    self.client_list.get(x)[2] = data[2]
            self.send_data(["pos", self.client_list])
            return 0
        if data[1] == "pos_plus":
            pass
        elif data[1] == "add player":
            print "[SERVER:] "+data[2]+" has joined at "+str(time.asctime())
            #newplayer = AddPlayer(data[1],self.newclient)
            self.cache.playerdict[self.newclient] = AddPlayer(data[1],self.newclient)
            #self.newclient.append([[0,0], 0.0, 0.0, 0])
            #self.client_list[data[2]] = self.newclient
            #self.newclient = []
            self.send_data("hello "+data[2])
        else:
            pass
def main():
    server = ServerHandler()
    server.connect("localhost",6317)
    server.serve_forever()
    server.quit()
if __name__ == '__main__': main()

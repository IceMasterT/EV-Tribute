How randomness works in the game mission generator.

When you choose to let the game adjust values it does so in a semi-random fashion.  
In other words, if a mission is a standard delivery the game is unlikely to
send regular freight from one agency's port to an opposing agency's port.
It is most likely to send the freight to another port of the same agency or it's allies.

The game will adjust the payout depending on the time limit, distance to travel, and amount to be delivered.
The game will adjust the payout depending on how many escorts a hostile target has, and how powerful the ships are.

All adjustments are semi-random meaning that the exact same mission down to the letter would probably result in a
different payout value, though the value would most likely be within several thousand monitary units.  But, it could
be a wildly different amount because it is semi-random and once in awhile a mission will be severely over valued or
undervalued.

The randomness works by taking the mission payout value, say 15000, 
multiplying it by the adjusted jump percentage (3 is average, so 5 jumps would give a jump percentage of 1.66 i.e 5/3) 
multiplying that by the cargo percentage (if the assigned mission cargo value is 30 but 
the mission generated by the game has a 20 ton cargo value, the percentage is 20/30 i.e. 0.66)
multiply that by the adjusted time percentage (the average time limit is 5 galactic time units per jump, 5time * 5jumps = 25.
say the alotted time for this mission is 15, 25/15 = 1.66)
1.66*0.66*1.66 = 1.818
15000 * 1.818 = 27270
27270 becomes the new payout baseline for the random number generator.  we want the possibility to exist
that the payout could be 35% lower or higher than the baseline so we feed the random number generator 3 number 27270*0.65, 27270*1.35, and 27270.
this tells the rng that we want 27270 to be the average and the other numbers the max possible and minimum possible values.  
now we ask the rng to return 7 values and we average those values to get our final mission payout.
